name: Supabase Migrations
permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  generate-migration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Supabase CLI
        run: |
          TMP_DIR=$(mktemp -d)
          curl -sL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz -o $TMP_DIR/supabase.tar.gz
          tar -xzf $TMP_DIR/supabase.tar.gz -C $TMP_DIR
          sudo mv -f $TMP_DIR/supabase /usr/local/bin/supabase
          rm -rf $TMP_DIR

      - name: Ensure migrations folder exists
        run: mkdir -p supabase/migrations

      - name: Generate migration from Test DB
        run: |
          TIMESTAMP=$(date +%s)
          MIGRATION_FILE="supabase/migrations/${TIMESTAMP}_auto.sql"
          supabase db diff --db-url ${{ secrets.SUPABASE_TEST_DB_URL }} --use-migra > "$MIGRATION_FILE"

      - name: Commit and push migration safely
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          if [ -s "$MIGRATION_FILE" ]; then
            git add "$MIGRATION_FILE"
            git commit -m "chore: add incremental migration $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
            git pull --rebase https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:${GITHUB_REF#refs/heads/}
          else
            echo "No migration changes detected. Skipping commit."
            rm -f "$MIGRATION_FILE"
          fi

  deploy-to-prod:
    needs: generate-migration
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Supabase CLI
        run: |
          TMP_DIR=$(mktemp -d)
          curl -sL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz -o $TMP_DIR/supabase.tar.gz
          tar -xzf $TMP_DIR/supabase.tar.gz -C $TMP_DIR
          sudo mv -f $TMP_DIR/supabase /usr/local/bin/supabase
          rm -rf $TMP_DIR

      - name: Apply migrations to Prod safely
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p supabase/migrations

          # Check if Prod is truly empty (no tables in public schema)
          TABLE_COUNT=$(psql ${{ secrets.SUPABASE_PROD_DB_URL }} -tAc \
            "SELECT count(*) FROM information_schema.tables WHERE table_schema='public';")

          # Check if baseline exists in repo
          BASELINE_EXISTS=$(ls supabase/migrations/*baseline.sql 2>/dev/null || true)

          if [ "$TABLE_COUNT" -eq "0" ] && [ -z "$BASELINE_EXISTS" ]; then
            echo "Prod is empty and no baseline exists. Creating full baseline..."
            TIMESTAMP=$(date +%s)
            BASELINE_FILE="supabase/migrations/${TIMESTAMP}_baseline.sql"
            supabase db dump --db-url ${{ secrets.SUPABASE_TEST_DB_URL }} > "$BASELINE_FILE"

            # Commit baseline safely
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "$BASELINE_FILE"
            git commit -m "chore: add baseline migration $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
            git pull --rebase https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:${GITHUB_REF#refs/heads/}

            echo "Applying baseline migration to Prod..."
            supabase db push --db-url ${{ secrets.SUPABASE_PROD_DB_URL }}

          else
            echo "Prod is not empty or baseline already exists. Skipping baseline."
            echo "Applying only incremental migrations..."
            supabase db push --db-url ${{ secrets.SUPABASE_PROD_DB_URL }}
          fi
